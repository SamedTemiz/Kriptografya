# 🔐 KRİPTOGRAFİ OYUNU - DETAYLI GEREKSİNİMLER
## Lovable AI Prompt için Hazırlanmış Dokümantasyon

---

## 📋 PROJE ÖZETİ

**Proje Adı**: Türkçe Kriptografi Oyunu
**Teknoloji**: Next.js 14 + TypeScript + Tailwind CSS
**Platform**: Web (Responsive)
**Hedef**: Eğitici ve eğlenceli kriptografi oyunu

---

## 🎯 OYUN KONSEPTİ

### Ana Mekanik
- **Substitution Cipher**: Türkçe cümlelerin harfleri sayılarla gizlenir
- **Hedef**: Gizlenen cümleyi 3 hata hakkıyla bulma
- **Zorluk**: Aynı harfler aynı sayıya karşılık gelir
- **Eğitim**: Türkçe kelime dağarcığı ve mantıksal düşünme

### Oyun Akışı
1. Kullanıcı zorluk seviyesi seçer (Kolay/Orta/Zor)
2. Sistem rastgele Türkçe cümle seçer
3. Cümle harfleri sayılarla gizlenir (1-29 arası)
4. Kullanıcı harf kutusuna tıklar
5. Klavyeden harf girer
6. Doğru/yanlış geri bildirim alır
7. 3 hata hakkı ile cümleyi bulmaya çalışır

---

## 🎮 OYUN MEKANİĞİ DETAYLARI

### Harf-Sayı Eşleştirmesi
```
Türkçe Alfabe (29 harf): A B C Ç D E F G Ğ H I İ J K L M N O Ö P R S Ş T U Ü V Y Z
Sayı Aralığı: 1-29 (rastgele dağıtım)
Örnek: A=14, B=3, C=21, Ç=8, D=26, E=1, F=9, G=20, Ğ=5, H=4, I=18, İ=26, J=1, K=2, L=14, M=3, N=21, O=8, Ö=26, P=1, R=9, S=20, Ş=5, T=4, U=18, Ü=26, V=1, Y=2, Z=14
```

### Cümle Gizleme Algoritması
```
Orijinal: "GÜNEŞ DOĞUYOR"
Gizli: "20 26 21 1 26 8 26 8 26 18 25 9"
Gösterim: 
_ _ _ _ _    _ _ _ _ _ _
20 26 21 1 26   8 26 8 26 18 25 9
```

### Skor Sistemi
- **Doğru harf**: +10 puan
- **Yanlış harf**: -5 puan
- **Oyun tamamlama**: Süre bonusu (saniye × 2)
- **Maksimum hata**: 3

### Zorluk Seviyeleri
```
🟢 Kolay (3-4 kelime):
- Günlük yaşam kelimeleri
- Basit gramer yapıları
- 5 dakika süre
- Örnek: "Güneş doğuyor", "Kedi uyuyor"

🟡 Orta (5-7 kelime):
- Çeşitli konular
- Orta seviye kelimeler
- 7 dakika süre
- Örnek: "Bugün hava çok güzel", "Yarın sinemaya gideceğim"

🔴 Zor (8+ kelime):
- Akademik/edebi terimler
- Karmaşık gramer yapıları
- 10 dakika süre
- Örnek: "Üniversitede bilgisayar mühendisliği okuyorum ve gelecekte yazılım geliştirici olmak istiyorum"
```

---

## 🎨 TASARIM GEREKSİNİMLERİ

### Genel Tasarım Prensipleri
- **Minimalist**: Sade ve temiz arayüz
- **Responsive**: Mobil ve desktop uyumlu
- **Accessible**: Erişilebilir tasarım
- **Turkish-First**: Türkçe karakter desteği

### Renk Paleti
```css
Primary: #3B82F6 (Blue)
Success: #10B981 (Green)  
Error: #EF4444 (Red)
Warning: #F59E0B (Amber)
Background: #F9FAFB (Gray-50)
Text: #1F2937 (Gray-800)
```

### Typography
```css
Headings: Inter Bold
Body: Inter Regular
Code/Numbers: JetBrains Mono
Font Sizes: 12px, 14px, 16px, 18px, 20px, 24px, 32px
```

### Layout Yapısı
```
┌─────────────────────────────────────┐
│           🔐 Kriptografi Oyunu      │
├─────────────────────────────────────┤
│    [Kolay] [Orta] [Zor]             │
├─────────────────────────────────────┤
│  Süre: 05:00  Hata: 0/3  Skor: 0   │
├─────────────────────────────────────┤
│                                     │
│  _ _ _ _    _ _ _ _    _ _ _ _      │
│  1 2 3 4    5 6 7 8    9 1 2 3      │
│                                     │
│  _ _ _ _    _ _ _ _    _ _ _ _      │
│  4 5 6 7    8 9 1 2    3 4 5 6      │
│                                     │
├─────────────────────────────────────┤
│        Kutuya tıklayın ve harf girin │
│           [Yeni Oyun]               │
└─────────────────────────────────────┘
```

---

## 🔧 TEKNİK GEREKSİNİMLER

### Frontend Stack
```
Next.js 14 (App Router)
TypeScript
Tailwind CSS
React Hooks (useState, useEffect, useCallback)
Custom Hooks (game logic)
```

### State Management
```typescript
interface GameState {
  originalSentence: string;
  cipherSentence: string;
  letterMapping: Map<string, number>;
  revealedLetters: Set<string>;
  mistakes: number;
  maxMistakes: number;
  score: number;
  timeLimit: number;
  startTime: number;
  isGameOver: boolean;
  isWon: boolean;
}
```

### Component Yapısı
```
CryptographyGame/
├── Header (Başlık ve zorluk seçimi)
├── GameInfo (Süre, hata, skor)
├── CipherDisplay (Ana oyun alanı)
│   ├── LetterBox (Harf kutuları)
│   └── WordGroup (Kelimeler)
├── Message (Geri bildirim)
├── GameStatus (Oyun sonu)
└── Controls (Yeni oyun butonu)
```

### Responsive Breakpoints
```css
Mobile: 320px - 768px
Tablet: 768px - 1024px  
Desktop: 1024px+
```

---

## 📱 KULLANICI ETKİLEŞİMİ

### Harf Kutu Sistemi
```typescript
interface LetterBoxProps {
  letter: string;        // Gizli harf
  number: number;        // Şifreli sayı
  isRevealed: boolean;   // Açık mı?
  isSelected: boolean;   // Seçili mi?
  onClick: () => void;   // Tıklama handler
}
```

### Kutu Durumları
```css
/* Normal durum */
.letter-box {
  background: #F9FAFB;
  border: 1px solid #D1D5DB;
  color: #6B7280;
}

/* Seçili durum */
.letter-box.selected {
  background: #DBEAFE;
  border: 1px solid #3B82F6;
  color: #1D4ED8;
}

/* Açık durum */
.letter-box.revealed {
  background: #D1FAE5;
  border: 1px solid #10B981;
  color: #065F46;
}
```

### Klavye Etkileşimi
- **Sadece harf kabul et**: A-Z, ÇĞIİÖŞÜ
- **Türkçe karakter desteği**: Tam Unicode desteği
- **Anlık geri bildirim**: Harf girişinde hemen göster
- **Otomatik seçim kaldırma**: Tahmin sonrası

---

## 🗃️ VERİ YAPISI

### Cümle Veritabanı
```typescript
interface Sentence {
  text: string;
  difficulty: 'easy' | 'medium' | 'hard';
  category: string;
}

const SENTENCES: Sentence[] = [
  // Kolay (15 cümle)
  { text: 'Güneş doğuyor', difficulty: 'easy', category: 'nature' },
  { text: 'Kedi uyuyor', difficulty: 'easy', category: 'animals' },
  // ... 13 tane daha
  
  // Orta (15 cümle)  
  { text: 'Bugün hava çok güzel', difficulty: 'medium', category: 'weather' },
  { text: 'Yarın sinemaya gideceğim', difficulty: 'medium', category: 'entertainment' },
  // ... 13 tane daha
  
  // Zor (8 cümle)
  { text: 'Üniversitede bilgisayar mühendisliği okuyorum ve gelecekte yazılım geliştirici olmak istiyorum', difficulty: 'hard', category: 'education' },
  // ... 7 tane daha
];
```

### Cipher Algoritması
```typescript
// 1. Rastgele harf-sayı eşleştirmesi
const mapping = new Map<string, number>();
const numbers = shuffle([1,2,3,...,29]);

// 2. Cümle gizleme
function sentenceToCipher(sentence: string, mapping: Map<string, number>): string {
  return sentence.toUpperCase()
    .split('')
    .map(char => mapping.get(char) || char)
    .join(' ');
}

// 3. Harf tahmin kontrolü
function makeGuess(gameState: GameState, letter: string): boolean {
  const exists = gameState.originalSentence.toUpperCase().includes(letter);
  if (exists) {
    gameState.revealedLetters.add(letter);
    gameState.score += 10;
  } else {
    gameState.mistakes += 1;
    gameState.score = Math.max(0, gameState.score - 5);
  }
  return exists;
}
```

---

## 🎯 ÖZEL GEREKSİNİMLER

### Türkçe Karakter Desteği
- **29 harfli alfabe**: A B C Ç D E F G Ğ H I İ J K L M N O Ö P R S Ş T U Ü V Y Z
- **Unicode encoding**: UTF-8 tam desteği
- **Büyük/küçük harf**: Otomatik dönüşüm
- **Noktalama**: Korunur (boşluk, virgül, nokta)

### Kalite Kontrolleri
```typescript
// Aynı harflerin yan yana gelmesini engelle
function hasConsecutiveLetters(text: string): boolean {
  for (let i = 0; i < text.length - 2; i++) {
    if (text[i] === text[i + 1] && text[i + 1] === text[i + 2] && text[i] !== ' ') {
      return true;
    }
  }
  return false;
}

// Kaliteli cümle seçimi
const goodSentences = sentences.filter(s => !hasConsecutiveLetters(s.text));
```

### Performans Optimizasyonu
- **Memoization**: React.memo ile component optimizasyonu
- **useCallback**: Event handler optimizasyonu
- **Lazy loading**: Cümle veritabanı yükleme
- **Debouncing**: Klavye girişi optimizasyonu

---

## 🚀 DEPLOYMENT GEREKSİNİMLERİ

### Build Konfigürasyonu
```json
{
  "scripts": {
    "dev": "next dev",
    "build": "next build", 
    "start": "next start",
    "lint": "next lint"
  }
}
```

### Environment Variables
```env
NEXT_PUBLIC_APP_NAME="Kriptografi Oyunu"
NEXT_PUBLIC_VERSION="1.0.0"
```

### PWA Desteği (Opsiyonel)
```json
{
  "name": "Kriptografi Oyunu",
  "short_name": "CipherGame",
  "description": "Türkçe kriptografi oyunu",
  "start_url": "/",
  "display": "standalone",
  "theme_color": "#3B82F6",
  "background_color": "#FFFFFF"
}
```

---

## 📋 TEST SENARYOLARI

### Temel Oyun Akışı
1. ✅ Sayfa yüklenir, rastgele cümle seçilir
2. ✅ Harfler sayılarla gizlenir
3. ✅ Kutuya tıklanır, seçim yapılır
4. ✅ Harf girilir, doğru/yanlış kontrol edilir
5. ✅ Doğru harf yeşil, yanlış harf kırmızı
6. ✅ 3 hata sonrası oyun biter
7. ✅ Tüm harfler bulununca oyun kazanılır

### Edge Cases
- ✅ Aynı harflerin yan yana gelmemesi
- ✅ Türkçe karakter desteği
- ✅ Süre dolduğunda oyun bitmesi
- ✅ Yeni oyun başlatma
- ✅ Zorluk seviyesi değiştirme

---

## 🎨 UI/UX DETAYLARI

### Animasyonlar
```css
/* Kutu hover efekti */
.letter-box:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  transition: all 0.2s ease;
}

/* Harf açılma animasyonu */
@keyframes revealLetter {
  0% { opacity: 0; transform: scale(0.8); }
  100% { opacity: 1; transform: scale(1); }
}

.letter-box.revealed {
  animation: revealLetter 0.3s ease-out;
}
```

### Responsive Tasarım
```css
/* Mobile */
@media (max-width: 768px) {
  .letter-box { width: 8px; height: 8px; }
  .game-info { flex-direction: column; gap: 8px; }
}

/* Desktop */
@media (min-width: 1024px) {
  .letter-box { width: 12px; height: 12px; }
  .cipher-display { max-width: 800px; }
}
```

### Accessibility
```html
<!-- ARIA labels -->
<button 
  aria-label="Harf kutusu, sayı: {number}"
  role="button"
  tabindex="0"
>
  {letter}
</button>

<!-- Keyboard navigation -->
<div role="grid" aria-label="Şifreli cümle">
  <div role="row">
    <div role="gridcell" tabindex="0">...</div>
  </div>
</div>
```

---

## 🔍 LOVABLE AI PROMPT

```
Create a Turkish Cryptography Game using Next.js 14, TypeScript, and Tailwind CSS.

CORE GAMEPLAY:
- Substitution cipher: Turkish sentences with letters replaced by numbers (1-29)
- Player clicks letter boxes and types letters to guess
- 3 mistake limit, score system, time limit
- Difficulty levels: Easy (3-4 words, 5min), Medium (5-7 words, 7min), Hard (8+ words, 10min)

TECHNICAL REQUIREMENTS:
- Next.js 14 with App Router
- TypeScript for type safety
- Tailwind CSS for styling
- Responsive design (mobile-first)
- Turkish character support (29 letters: A-Z + ÇĞIİÖŞÜ)

UI DESIGN:
- Minimalist white background
- Letter boxes: 40x40px, gray border, numbers below
- Selected box: blue background
- Revealed letter: green background
- Horizontal word layout with proper spacing
- Clean typography using Inter font

GAME MECHANICS:
- Random sentence selection from database
- Letter-to-number mapping (1-29)
- Real-time feedback on correct/wrong guesses
- Score: +10 correct, -5 wrong, time bonus
- Prevent consecutive same letters in sentences
- Only accept Turkish letters (A-Z, ÇĞIİÖŞÜ)

COMPONENT STRUCTURE:
- CryptographyGame (main component)
- LetterBox (individual letter boxes)
- GameInfo (timer, mistakes, score)
- DifficultySelector (easy/medium/hard)
- GameStatus (win/lose messages)

SENTENCE DATABASE:
Include 15 easy, 15 medium, 8 hard Turkish sentences covering daily life, nature, education, culture, etc.

Make it fully functional, responsive, and accessible. Focus on clean code and smooth user experience.
```

---

## 📝 SONUÇ

Bu dokümantasyon, Türkçe Kriptografi Oyunu'nun tüm teknik ve tasarım gereksinimlerini detaylı olarak açıklamaktadır. Lovable AI gibi kod üretim araçları için hazırlanmış olup, geliştiricinin tüm gereksinimleri anlayabilmesi için yeterli detayda yazılmıştır.

**Anahtar Özellikler:**
- ✅ Türkçe karakter desteği
- ✅ Minimal ve responsive tasarım  
- ✅ Eğitici oyun mekaniği
- ✅ Zorluk seviyeleri
- ✅ Skor ve süre sistemi
- ✅ Modern web teknolojileri

Bu dokümantasyon ile herhangi bir AI kod üretim aracında proje başarıyla oluşturulabilir.
